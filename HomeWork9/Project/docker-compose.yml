
x-postgres-common:
  &postgres-common
  image: postgres:14-alpine
  user: postgres
  restart: always
  healthcheck:
    test: 'pg_isready -U postgres --dbname=postgres'
    interval: 10s
    timeout: 5s
    retries: 5

services:
  postgres-master:
    <<: *postgres-common
    container_name: pg-master
    ports:
      - 54321:5432
    environment:
      POSTGRES_USER: postgres
      POSTGRES_DB: postgres
      POSTGRES_PASSWORD: pass
      POSTGRES_HOST_AUTH_METHOD: "scram-sha-256\nhost replication all 0.0.0.0/0 md5"
      POSTGRES_INITDB_ARGS: "--auth-host=scram-sha-256"
    command: |
      postgres 
      -c wal_level=replica 
      -c hot_standby=on 
      -c max_wal_senders=10 
      -c max_replication_slots=10 
      -c hot_standby_feedback=on
    volumes:
      - master_data:/var/lib/postgresql/data
      - ./00_init.sql:/docker-entrypoint-initdb.d/00_init.sql
    networks:
      - appnet  

  postgres-slave1:
    <<: *postgres-common
    container_name: pg-slave1
    ports:
      - 54322:5432
    environment:
      PGUSER: rep1
      PGPASSWORD: passrep1
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot1 --host=postgres-master --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - postgres-master
    volumes:
      - slave1_data:/var/lib/postgresql/data  
    networks:
      - appnet  
      
  postgres-slave2:
    <<: *postgres-common
    container_name: pg-slave2
    ports:
      - 54323:5432
    environment:
      PGUSER: rep2
      PGPASSWORD: passrep2
    command: |
      bash -c "
      until pg_basebackup --pgdata=/var/lib/postgresql/data -R --slot=replication_slot2 --host=postgres-master --port=5432
      do
      echo 'Waiting for primary to connect...'
      sleep 1s
      done
      echo 'Backup done, starting replica...'
      chmod 0700 /var/lib/postgresql/data
      postgres
      "
    depends_on:
      - postgres-master
    volumes:
      - slave2_data:/var/lib/postgresql/data   
    networks:
      - appnet

  haproxy:
    image: haproxy:2.9
    container_name: haproxy
    ports:
      - "5433:5433"
    volumes:
      - ./haproxy.cfg:/usr/local/etc/haproxy/haproxy.cfg:ro
    depends_on:
      - postgres-slave1
      - postgres-slave2
    networks:
      - appnet

  backend1:
    build: ./app
    container_name: backend1
    ports:
      - "8001:8000"
    networks:
      - appnet

  backend2:
    build: ./app
    container_name: backend2
    ports:
      - "8002:8000"
    networks:
      - appnet

  nginx:
    image: nginx:1.25
    container_name: nginx
    ports:
      - "8003:80"
    volumes:
      - ./nginx.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - backend1
      - backend2
    networks:
      - appnet

volumes:
  master_data:
  slave1_data:
  slave2_data:

networks:
  appnet:
    driver: bridge

